---
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Testing a small API deployment

Parameters:
  Stage:
    Type: String
    Description: The default stage
    Default: staging

Resources:
  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      DefinitionUri: ./out/swagger.yaml
      StageName: !Ref Stage
      Variables:
        ExecutionRoleName:
          Ref: ApiGatewayExecutionRole
        ProductsTable:
          Ref: ProductsTable

  ProductsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1

  ProductUpdateTopic:
    Type: AWS::SNS::Topic

  WriteToDynamoLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.handler
      Runtime: nodejs6.10
      CodeUri: ./out/dynamo-write-lambda.js
      Policies:
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:PutItem
              Resource:
                - !GetAtt ProductsTable.Arn
      Events:
        Update: 
          Type: SNS
          Properties:
            Topic: !Ref ProductUpdateTopic
      Environment:
        Variables:
          TABLE: !Ref ProductsTable

  ApiGatewayExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
            Action: sts:AssumeRole

  ApiGatewayExecutionPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: APIPermissions
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - dynamodb:Scan
            Resource: !GetAtt ProductsTable.Arn
      Roles:
        - Ref: ApiGatewayExecutionRole

  Monitoring:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./.noths/monitoring.yml
      TimeoutInMinutes: 5
      Parameters:
        DashboardName: !Sub "${AWS::StackName}-${Stage}"
        RestApiName: !Ref AWS::StackName
        RestApiStage: !Ref Stage
        ProductsTable: !Ref ProductsTable
        ProductUpdateTopic: !Ref ProductUpdateTopic
        WriteToDynamoLambdaFunction: !Ref WriteToDynamoLambdaFunction

Outputs:
  ApiUrl:
    Description: URL of your API endpoint
    Value: !Sub "https://${ApiGateway}.execute-api.${AWS::Region}.${AWS::URLSuffix}/${Stage}"